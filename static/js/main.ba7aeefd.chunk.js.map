{"version":3,"sources":["components/ContactsForm/ContactsForm.jsx","App/App.js","index.js"],"names":["ContactsForm","state","contacts","name","number","reset","setState","handleChange","e","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","id","pattern","title","required","onClick","console","log","buttonname","Component","App","filter","newContact","Object","keys","map","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSA8EeA,E,4MA3EbC,MAAQ,CACNC,SAAU,GACVC,KAAM,GACNC,OAAQ,I,EAEVC,MAAQ,WACN,EAAKC,SAAS,CAAEH,KAAM,GAAIC,OAAQ,M,EAEpCG,aAAe,SAACC,GACd,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAGd,EAAKJ,SAAL,eAAiBH,EAAOO,K,EAK1BC,aAAe,SAACH,GACd,MAAyB,EAAKP,MAAtBE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEdI,EAAEI,iBACF,EAAKC,MAAMC,SAASX,EAAMC,GAE1B,EAAKC,S,4CAGP,WACE,OACE,8BACE,uBACES,SAAUC,KAAKJ,aADjB,UAOE,yCAEE,uBACEK,KAAK,OACLb,KAAK,OACLO,MAAOK,KAAKd,MAAME,KAClBc,SAAUF,KAAKR,aACfW,GAAIH,KAAKd,MAAME,KACfgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEL,KAAK,MACLb,KAAK,SACLO,MAAOK,KAAKd,MAAMG,OAClBa,SAAUF,KAAKR,aACfW,GAAIH,KAAKd,MAAMG,OACfe,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBACEC,QAAS,WACPC,QAAQC,IAAI,gBAEdR,KAAK,SACLS,WAAW,yB,GApEIC,aC6DZC,E,4MAzDb1B,MAAQ,CACNC,SAAU,CACR,CAAEgB,GAAI,OAAQf,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEc,GAAI,OAAQf,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEc,GAAI,OAAQf,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEc,GAAI,OAAQf,KAAM,iBAAkBC,OAAQ,cAEhDwB,OAAQ,I,EAKVjB,aAAe,SAACR,EAAMC,EAAQc,GAE5B,IAAMW,EAAa,CACjBX,KACAf,OACAC,UAGMF,EAAa,EAAKD,MAAlBC,SACRqB,QAAQC,IAAItB,GACZ,EAAKI,UAAS,gBAAGJ,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAE2B,GAAH,mBAAkB3B,S,4CAG9B,WACE,OACE,cAAC,WAAD,UACE,gCACE,2CACA,cAAC,EAAD,CAAcY,SAAUC,KAAKJ,eAE7B,0CAEA,0DAEE,uBACEK,KAAK,OACLb,KAAK,OACLgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,6BACGS,OAAOC,KAAKhB,KAAKd,MAAMC,UAAU8B,KAAI,SAAAC,GAAI,OACxC,sBAASA,iB,GAhDLP,aCAlBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba7aeefd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass ContactsForm extends Component {\n  state = {\n    contacts: [],\n    name: \"\",\n    number: \"\",\n  };\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    //this.setState({ name: e.currentTarget.name });\n    // this.setState({ value });\n    this.setState({ [name]: value });\n    // console.log(\"VALUE:\", e.currentTarget);\n    // console.log(\"NAME:\", [name]);\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    //   const { number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n\n    this.reset();\n  };\n\n  render() {\n    return (\n      <div>\n        <form\n          onSubmit={this.handleSubmit}\n          //   onSubmit={(e) => {\n          //     e.preventDefault();\n          //     console.log(e.currentTarget);\n          //   }}\n        >\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              id={this.state.name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              id={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button\n            onClick={() => {\n              console.log(\"add contakt\");\n            }}\n            type=\"submit\"\n            buttonname=\"Add contact\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactsForm;\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\n\nimport ContactsForm from '../components/ContactsForm';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    // name: '',\n    // number: '',\n  };\n\n  handleSubmit = (name, number, id) => {\n    // console.log(this.state.contacts);\n    const newContact = {\n      id,\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n    console.log(contacts);\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n  render() {\n    return (\n      <Fragment>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactsForm onSubmit={this.handleSubmit} />\n\n          <h2>Contacts</h2>\n          {/* <Filter  /> */}\n          <label>\n            Find contacts by name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <ul>\n            {Object.keys(this.state.contacts).map(item => (\n              <li key={item}></li>\n            ))}\n          </ul>\n          {/* <ContactList  /> */}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}