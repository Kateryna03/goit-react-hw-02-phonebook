{"version":3,"sources":["components/ContactsForm/ContactsForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App/App.js","index.js"],"names":["ContactsForm","state","contacts","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","id","pattern","title","required","onClick","console","log","Component","ContactList","handleDeleteContact","map","prototype","PropTypes","string","isRequired","func","array","Filter","onChangeFilter","defaultProps","App","filter","newContact","shortid","generate","find","contact","alert","handleRemoveContact","prevState","onFilterName","normolizedFilter","toLowerCase","includes","contactsResults","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAiFeA,E,4MA9EbC,MAAQ,CACNC,SAAU,GACVC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAGd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAK1BE,aAAe,SAAAJ,GACb,MAAyB,EAAKL,MAAtBE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEdE,EAAEK,iBACF,EAAKC,MAAMC,SAASV,EAAMC,GAE1B,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,8BACE,uBACES,SAAUE,KAAKL,aADjB,UAOE,yCAEE,uBACEM,KAAK,OACLb,KAAK,OACLK,MAAOO,KAAKd,MAAME,KAClBc,SAAUF,KAAKV,aACfa,GAAIH,KAAKd,MAAME,KACfgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEL,KAAK,MACLb,KAAK,SACLK,MAAOO,KAAKd,MAAMG,OAClBa,SAAUF,KAAKV,aACfa,GAAIH,KAAKd,MAAMG,OACfe,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBACEC,QAAS,WACPC,QAAQC,IAAI,gBAEdR,KAAK,SAJP,kC,GAjEiBS,a,gBCCrBC,EAAc,SAAC,GAAuC,IAArCxB,EAAoC,EAApCA,SAAUyB,EAA0B,EAA1BA,oBAC/B,OACE,6BACGzB,EAAS0B,KAAI,gBAAGV,EAAH,EAAGA,GAAIf,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACE,4BAAID,IACJ,4BAAIC,IACJ,wBAAQY,KAAK,SAASM,QAAS,kBAAMK,EAAoBT,IAAzD,8BAHOA,SAYjBQ,EAAYG,UAAY,CACtBX,GAAIY,IAAUC,OAAOC,WACrB7B,KAAM2B,IAAUC,OAAOC,WACvB5B,OAAQ0B,IAAUC,OAAOC,WACzBL,oBAAqBG,IAAUG,KAAKD,WACpC9B,SAAU4B,IAAUI,MAAMF,YAEbN,QCvBTS,EAAS,SAAC,GAA+B,IAA7B3B,EAA4B,EAA5BA,MAAO4B,EAAqB,EAArBA,eACvB,OACE,0DAEE,uBACEpB,KAAK,OACLR,MAAOA,EACPS,SAAUmB,EACVjB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,QAMhBc,EAAOE,aAAe,CACpB7B,MAAO,IAGT2B,EAAON,UAAY,CACjBrB,MAAOsB,IAAUC,OAAOC,WACxBI,eAAgBN,IAAUG,KAAKD,YAGlBG,QCmDAG,E,4MAvEbrC,MAAQ,CACNC,SAAU,CACR,CAAEgB,GAAI,OAAQf,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEc,GAAI,OAAQf,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEc,GAAI,OAAQf,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEc,GAAI,OAAQf,KAAM,iBAAkBC,OAAQ,cAEhDmC,OAAQ,I,EAKV7B,aAAe,SAACP,EAAMC,EAAQc,GAE5B,IAAMsB,EAAa,CACjBtB,GAAIuB,IAAQC,WACZvC,OACAC,UAEMF,EAAa,EAAKD,MAAlBC,SACJA,EAASyC,MAAK,SAAAC,GAAO,OAAIA,EAAQzC,OAASqC,EAAWrC,QACvD0C,MAAM,GAAD,OAAIL,EAAWrC,KAAf,6BAIPoB,QAAQC,IAAItB,GACZ,EAAKO,UAAS,gBAAGP,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEsC,GAAH,mBAAkBtC,U,EAI9B4C,oBAAsB,SAAA5B,GACpB,EAAKT,UAAS,SAAAsC,GAAS,MAAK,CAC1B7C,SAAU6C,EAAU7C,SAASqC,QAAO,SAAAK,GAAO,OAAIA,EAAQ1B,KAAOA,U,EAIlEkB,eAAiB,SAAA9B,GACf,EAAKG,SAAS,CAAE8B,OAAQjC,EAAEC,cAAcC,S,EAE1CwC,aAAe,WACb,MAA6B,EAAK/C,MAA1BsC,EAAR,EAAQA,OAAQrC,EAAhB,EAAgBA,SACV+C,EAAmBV,EAAOW,cAChC,OAAOhD,EAASqC,QAAO,SAAAK,GAAO,OAC5BA,EAAQzC,KAAK+C,cAAcC,SAASF,O,4CAGxC,WACE,IAAMG,EAAkBrC,KAAKiC,eAC7B,OACE,cAAC,WAAD,UACE,gCACE,2CACA,cAAC,EAAD,CAAcnC,SAAUE,KAAKL,eAE7B,0CACA,cAAC,EAAD,CACEF,MAAOO,KAAKd,MAAMsC,OAClBH,eAAgBrB,KAAKqB,iBAGvB,cAAC,EAAD,CACElC,SAAUkD,EACVzB,oBAAqBZ,KAAK+B,+B,GAhEpBrB,aCFlB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ad418e08.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ContactsForm extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    //this.setState({ name: e.currentTarget.name });\n    // this.setState({ value });\n    this.setState({ [name]: value });\n    // console.log(\"VALUE:\", e.currentTarget);\n    // console.log(\"NAME:\", [name]);\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    //   const { number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <form\n          onSubmit={this.handleSubmit}\n          //   onSubmit={(e) => {\n          //     e.preventDefault();\n          //     console.log(e.currentTarget);\n          //   }}\n        >\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              id={this.state.name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              id={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button\n            onClick={() => {\n              console.log('add contakt');\n            }}\n            type=\"submit\"\n          >\n            add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactsForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, handleDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>{name}</p>\n          <p>{number}</p>\n          <button type=\"button\" onClick={() => handleDeleteContact(id)}>\n            delete contact\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component, Fragment } from 'react';\nimport shortid from 'shortid';\nimport './App.css';\n\nimport ContactsForm from '../components/ContactsForm';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    // name: '',\n    // number: '',\n  };\n\n  handleSubmit = (name, number, id) => {\n    // console.log(this.state.contacts);\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const { contacts } = this.state;\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name}is already in contacts.`);\n      return;\n    }\n\n    console.log(contacts);\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  handleRemoveContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  onChangeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  onFilterName = () => {\n    const { filter, contacts } = this.state;\n    const normolizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normolizedFilter),\n    );\n  };\n  render() {\n    const contactsResults = this.onFilterName();\n    return (\n      <Fragment>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactsForm onSubmit={this.handleSubmit} />\n\n          <h2>Contacts</h2>\n          <Filter\n            value={this.state.filter}\n            onChangeFilter={this.onChangeFilter}\n          />\n\n          <ContactList\n            contacts={contactsResults}\n            handleDeleteContact={this.handleRemoveContact}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}